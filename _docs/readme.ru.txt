      _____  _     _  _____  _______ _     _ _______ _______ _______
 <   |_____] |_____| |_____] |  |  | |     | |______ |______ |______ |        >
     |       |     | |       |  |  | |_____| ______| ______| |______ |_____

                            { ~ ~ ~ РУССКИЙ ~ ~ ~ }
 СОДЕРЖАНИЕ
 1. ПРЕДИСЛОВИЕ
 2A. ИНСТАЛЛЯЦИЯ (СЕРВЕР)
 2B. ИНСТАЛЛЯЦИЯ (CLI; СПОСОБ КОМАНДНЫХ СТРОК)
 3A. ИСПОЛЬЗОВАНИЕ (СЕРВЕР)
 3B. ИСПОЛЬЗОВАНИЕ (CLI; СПОСОБ КОМАНДНЫХ СТРОК)
 4A. КОМАНДЫ БРАУЗЕРА
 4B. CLI (СПОСОБ КОМАНДНЫХ СТРОК)
 5. СОДЕРЖАНИЕ ПАКЕТА ФАЙЛОВ
 6. НАСТРОЙКИ
 7. ФОРМАТ ПОДПИСЕЙ
 8. ИЗВЕСТНЫЕ ПРОБЛЕМЫ СОВМЕСТИМОСТИ

                                     ~ ~ ~


 1. ПРЕДИСЛОВИЕ

 Большое спасибо всем, кто пользуется данным phpMussel-пособием.
 PHP-руководство позволяет обнаружить вирусы, троянские кони и другие
 вредоносные программы, проникающие в ваш компьютер, имеющие код ClamAV и
 другие.

 PHPMUSSEL Авторское право 2013 года, а также GNU/GPLv2 by Caleb M (Maikuolan).

 Это руководство находится в свободном доступе. Вы можете его передавать и/или
 модифицировать на условиях GNU General Public License, как публикует Фонд
 свободного программного обеспечения (Free Software Foundation); либо под
 второй версией лицензии, либо любой другой более поздней версией (по вашему
 выбору). Пособие публикуется не в целях увеличения прибыли или создания себе
 рекламы, а лишь в надежде принести пользу, правда, без всякой гарантии.
 Подробности вы можете узнать на странице GNU General Public License в разделе
 "LINCENSE" в прилагаемых к нему документах "_docs", а также на страницах:
 <http://www.gnu.org/licenses/> <http://opensource.org/licenses/>.

 За вдохновение по созданию этого руководства я говорю большое спасибо ClamAV.
 Также я благодарю всех, кто пользуется этим руководством. Без вас оно,
 вероятно, никогда не существовало бы или ценность его была бы не очень
 большой <http://www.clamav.net/>.

 Также большую благодарность выражаю Sourceforge и GitHub за созданные ими
 хостадреса проектов; Spambot Security за дискуссионные форумы phpMussel
 <http://www.spambotsecurity.com/forum/viewforum.php?f=55>; Подписчикам
 SecuriteInfo.com <http://www.securiteinfo.com/>, PhishTank
 <http://www.phishtank.com/>, NLNetLabs <http://nlnetlabs.nl/> и другим. Особая
 благодарность тем, кто поддержит этот проект, а также всем неназванным мною
 людям, в том чисте и Вам за то, что пользуетесь этим пособием.

 Этот документ с относящимися к нему пакетом файлов можно бесплатно скачать на
 страницах:
 - Sourceforge <http://phpmussel.sourceforge.net/>.
 - GitHub <https://github.com/Maikuolan/phpMussel/>.

                                     ~ ~ ~


 2A. ИНСТАЛЛЯЦИЯ (СЕРВЕР)

 Уже ведутся работы по упрощению процесса инсталляции, но пока, чтобы
 установить phpMussel на большинство используемых систем и систем управления
 содержимым (CMS), следуйте указаниям:

 1) Скачайте архив на свой компьютер и откройте его. На хост-компьютере или в
    системе управления содержимым (CMS) создайте регистр, куда вы хотите
    загрузить содержимое этого пакета. Такой регистр, как
    `/public_html/phpmussel/`, будет вполне достаточным, пока он отвечает вашим
    требованиям к защите или личным предпочтениям.

 2) Дополнительные опции (рекомендуются для опытных пользователей, имеющих
    соответствующие знания). Откройте файл "phpmussel.ini" в "vault"-регистре.
    Этот файл содержит все функциональные опции phpMussel. Краткие комментарии
    описывают задачи каждой опции. Измените величины в соответствии с Вашими
    потребностями. Сохраните файл и закройте.

 3) Скачайте всё содержимое (phpMussel и файлы) в указанный в пункте 1 регистр,
    кроме файлов *.txt/*.md.

 4) Право доступа "vault"-регистра поменяйте на «777». Права доступа
    вышестоящего регистра, в котором находится содержание (регистр, в который
    вы наметили занести файлы) могут остаться прежними, но всё же лучше
    проверить доступ (Если уже случались проблемы с доступом, когда
    предварительная установка была, например, «755»).

 5) Скрепите phpMussel с Вашей системой или с системой управления содержимым
    (CMS). Для этого есть много способов. Самым простым является способ, когда
    phpMussel-руководство является началом главного файла, который будет
    загружаться всякий раз, когда будут заходить на ваш интернет-сайт. Этот
    файл нужно связать с Вашей системой или с системой управления содержимым
    (CMS) при помощи "require()" или "include()" команд. Обычно такой файл
    обозначается в регистре как /includes, /assets или /functions, и часто
    называется "init.php", "common_functions.php", "functions.php". Вы
    должны найти тот файл, который соответствует Вашим требованиям. Если это
    трудно для Вас, то посетите форумы phpMussel. Возможно я или кто-то другой
    уже имеет опыт работы с CMS, которую используете вы, и сможет дать Вам
    совет (обязательно сообщите, какой CMS Вы пользуетесь). Введите прямо в
    начало этого файла следующий код:

    <?php require '/user_name/public_html/phpmussel/phpmussel.php'; ?>

    Строку между кавычками замените локальным путём файла в формате
    "phpmussel.php", без HTTP-адреса (подобно пути для "vault"-регистра).
    Сохраните файл и закройте его; Загрузите его заново.

    -- АЛЬТЕРНАТИВА --

    Если у Вас Apache HTTP-сервер и доступ к нему в формате "php.ini" или
    похожем формате, вы можете воспользоваться "auto_prepend_file"-директивой,
    установя приоритет phpMussel, когда последует PHP-запрос. Примерно так:

    auto_prepend_file = "/user_name/public_html/phpmussel/phpmussel.php"

    Или в ".htaccess" файлом:

    php_value auto_prepend_file "/user_name/public_html/phpmussel/phpmussel.php"

 6) На этом инсталляционный процесс заканчивается. Теперь Вам необходимо
    протестировать программу на правильность функционирования. Для этого Вам
    нужно имеющиеся в пакете тестовые файлы "_testfiles" загрузить на Вашу
    веб-страницу любым способом, который позволяет Ваш браузер. При нормальном
    функционировании программы появится сообщение от phpMussel, что
    загрузка/уплоад была успешно блокирована. Если такое сообщение не
    появилось, то программа функционирует неправильно. Воспользуйтесь другими
    расширенными функциями или всевозможными сканированными видами этой
    программы. Вы должны тестировать до тех пор, пока не убедитесь в нормальном
    функционировании программы.

                                     ~ ~ ~


 2B. ИНСТАЛЛЯЦИЯ (CLI; СПОСОБ КОМАНДНЫХ СТРОК)

 В скором будущем этот процесс будет осуществляться инсталляционным менеджером,
 а пока для инсталляции phpMussel в CLI-модусе следуйте указаниям (Внимание!
 Сейчас CLI-Support возможен только на Windows; Linux и другие системы будут
 поддерживать эту программу лишь в будущих версиях):

 1) Скачайте архив на свой компьютер, поместив его в регистр, соответствующего
    Вашим требованиям к защите или личным предпочтениям. Откройте папку.

 2) Чтобы действовать, phpMussel нужна PHP-среда. В случае, если вы не имеете
    PHP, то инсталлируте её, пожалуйста, следуя указаниям PHP-инсталлятора.

 3) Дополнительные опции (рекомендуются для опытных пользователей, имеющих
    соответствующие знания). Откройте файл "phpmussel.ini" в "vault"-регистре.
    Этот файл содержит все функциональные опции phpMussel. Краткие комментарии
    описывают задачи каждой опции. Измените величины в соответствии с Вашими
    потребностями. Сохраните файл и закройте.

 4) Дополнительные опции. Старт phpMussel можно упростить, если вместе с файлом
    пакетной обработки PHP автоматически загрузить и phpMussel. Откройте
    простую программу обработки текста, такую как Editor или Notepad++. Внесите
    полный путь доступа к Вашему "php.exe"-файлу в регистр PHP-инсталлятора.
    Потом сделайте пробел. За ним – полный путь к "phpmussel.php"-файлу в
    регистре phpMussel-инсталлятора. Внесите этот файл в память компьютера в
    формате ".bat" в то место, где вы всегда сможете его легко найти и открыть
    двойным щелчком мышки.

 5) На этом процесс инсталляции завершён. Теперь вам нужно проверить как
    работает программа. Для тестирования запустите phpMussel и попытайтесь
    просканировать "_testfiles"-регистр, содержащийся в инсталляционном пакете.

                                     ~ ~ ~


 3A. ИСПОЛЬЗОВАНИЕ (СЕРВЕР)

 phpMussel функционирует полностью в автономном режиме, то есть, вам вообще
 ничего не надо делать. Ваша задача: инсталлировать программу, а работать она
 будет сама.

 Сканирование файлов загрузки унифицировано и запускается автоматически. Вам
 больше ничего не нужно делать.

 Тем не менее у вас есть возможность отдать распоряжение phpmussel сканировать
 файлы, папки или архивы, указанные вами конкретно. для этого убедитесь, что
 данная структура имеет формат "phpmussel.ini" (cleanup должен быть
 деактивирован), создайте PHP-файл, интегрированный в phpmussel, со следующей
 функцией:

 phpMussel($what_to_scan,$output_type,$output_flatness);

 - $what_to_scan является строкой или матрицей, указывающей на файл, регистр
   или матрицу файлов и/или регистров, которые подлежат сканированию.

 - $output_type это целое число (Integer), указывающее на формат, который
   должен получиться в результате. Нулевое значение задаёт функцию выдать
   результат в виде целого числа (Integer). Полученное в результате операции
   число -3 указывает на то, что имеются проблемы с файлом цифровой подписи
   phpMussel или Map, вероятно они отсутствуют или повреждены; число -2
   показывает, что повреждённые файлы найдены, но сканирование не закончено; -1
   означает, что для сканирования необходимы отсутствующие PHP-расширения или
   дополнения, поэтому сканирование не завершено; 0 говорит о том, что цель не
   существует, а следовательно не может быть и проверена; 1 означает, что цель
   успешно проверена и проблем не найдено; 2 цель успешно проверена, но имеются
   проблемы. Единица задает функцию, выдать результат в форме читаемого текста.
   Двойка задаёт функцию получения результата в двух видах: в виде читаемого
   текста, и экспорт в глобальную переменную. Глобальная переменная является
   необязательной, её стандартная величина 0.

 - $output_flatness это целое число (Integer), требующее выдать результат в
   виде дополнения или строки. Если цель состоит из нескольких элементов как,
   например, регистры или матрицы, то результатом операции будет матрица (со
   стандартным числом 0). Единица вызывает функцию, результатом которой будет
   сцепленная строка. Эта переменная является необязательной, её стандартная
   величина 0.

 Например:

   $results=phpMussel('/user_name/public_html/my_file.html',true,true);
   echo $results;

   А вот как это выглядит в виде строки:
    Wed, 16 Sep 2013 02:49:46 +0000 Начало работы.
    > Проверить '/user_name/public_html/my_file.html':
    -> Проблемы не найдены.
    Wed, 16 Sep 2013 02:49:47 +0000 Готово.

 Полный список используемых phpMussel подписей, а также порядок их обработки,
 Вы найдёте в разделе ФОРМАТ подписями.

 При возникновении каких-либо тревожных сигналов, при обнаружении того, что по
 Вашему мнению должно быть заблокировано, или что-то не функционирует с
 подписями, просьба сообщить об этом автору, дабы можно было внести изменения и
 исправить ситуацию.

 Информация по деактивированию содержащихся в phpMussel подписей находится в
 указаниях к серым спискам (Greylisting) в разделе КОМАНДЫ БРАУЗЕРА.

 Выше названными функциями можно проверить не только загружаемые файлы или уже
 имеющиеся на компьютере файлы и папки. phpMussel имеет ещё одну функцию,
 позволяющую проверить текст письма, присланного по электронной почте. Эта
 функция работает подобно нормальному phpMussel-сканированию, однако
 фокусируется на электронной ClamAV-подписи. Этих подписей нет в нормальных
 функциях phpMussel(), так как необходимость проверки электронного письма в
 течение его загрузки на веб-страницу, связанную с phpMussel, является мало
 вероятной. Включение этих подписей в функции phpMussel() было бы излишним. Эта
 особая функция полезна для системы управления содержимым (CMS), которая
 работает совместно с системой электронного письма, или для системы,
 анализирующей электронное письмо при помощи PHP. Эта функция конфигурируется в
 "phpmussel.ini". Чтобы воспользоваться ею, вы должны вручную в один из
 PHP-файлов, включённых в phpMussel, внести следующий код:

 phpMussel_mail($body);

 $body – это текст электронного письма, который Вы хотите проверить.
 Дополнительно вы можете попробовать просканировать новые сообщения на форумах
 или поступающие с какой-нибудь страницы новости. При возникновении ошибки
 появится значение -1. Если сканирование прошло успешно и никаких отклонений от
 нормы не выявлено, то функция покажет значение 0. При отклонении от нормы,
 функция выдаст строку с сообщеним о том, что было обнаружено.

 Чтобы проанализировать исходный текст, отыщите phpMusselD() и phpMusselR()
 функции. Эти функции являются частью phpMussel(), и работают только совместно
 с вышестоящими функциями (Их подчинённость объясняется не тем, что они имеют
 побочные эффекты, просто загружать их отдельно не имеет смысла, да и нормально
 загрузить их самостоятельно не получится).

 Для осуществления Ваших замыслов phpMussel предлагает и много других функций и
 возможностей для управления. Не перечисленные здесь функции и возможности
 управления Вы найдёте в разделе КОМАНДЫ БРАУЗЕРА.

                                     ~ ~ ~


 3B. ИСПОЛЬЗОВАНИЕ (CLI; СПОСОБ КОМАНДНЫХ СТРОК)

 Пожалуйста, прочитайте раздел "ИНСТАЛЛЯЦИЯ (CLI; СПОСОБ КОМАНДНЫХ СТРОК)".

 В настоящее время phpMussel в CLI-модусе оптимизирована только для Windows; Но
 будущие версии будут поддерживать и другие системы. Естественно, вы можете
 попробовать инсталлировать phpMussel и на другие системы, но никто Вам не даст
 гарантии, что программа будет функционировать как предусмотрено.

 Кроме того необходимо иметь ввиду, что phpMussel не может заменить полноценное
 антивирусное программное обеспечение, не проверяет рабочую память компьютера и
 не определяет вирусы спонтанно! Программа проверяет на вирусы только заданные
 Вами файлы.

                                     ~ ~ ~


 4A. КОМАНДЫ БРАУЗЕРА

 Если вы инсталлировали на свой компьютер phpMussel, и программа работает
 нормально, то через свой браузер вы можете передать ей некоторые функции
 управления и команды, правда только в том случае, если вы внесли в файл
 конфигурации переменные script_password и logs_password. Эти пароли
 устанавливаются для активизации контроля, способного обеспечить наибольшую
 безопасность, для защиты контроля браузера и для того, чтобы можно было
 полностью деактивировать проверки браузера, которые не нужны ни Вам, ни
 веб-мастеру, ни администраторам. Пароль задаётся только для активизации
 контроля, деактивизация осуществляется без пароля. По своему выбору Вы можете
 активировать эти проверки, а позже отдать команду, чтобы деактивировать.
 Например: Вы хотите совершить какое-то действие, но опасаетесь, что Ваш пароль
 будет определён, тогда вы можете быстро деактивировать проверки, не внося
 изменения в конфигурационный файл.

 Почему нужно активировать эти проверки?
 - При загрузке файлов в Вашу систему программа предоставляет возможность
   добавить подписи в «серый список» (Greylist), подавая сигнал тревоги, если у
   Вас нет времени самим обработать его в ручную.
 - При помощи phpMussel вы можете позволить другому человеку проверить ваш
   комьютор, не давая им доступ к FTP-программе.
 - Даётся возможность предоставлять контролируемый доступ к вашим файлам
   регистрации.
 - Упрощается обновление phpMussel.
 - Имеется возможность контролировать phpMussel, когда не доступны FTP или
   другие программы доступа.

 Почему -НЕ- нужно активировать эти проверки?
 - Задается вектор для атак. Независимо от того, пользуетесь вы phpMussel или
   нет, на ваш сервер будут посылаться слепые команды / зондирования попытки
   (поэтому есть как сторонники, так и противники использования команд
   браузера). С одной стороны, не получив нужного результата, благодаря работе
   phpMussel, вы станете неинтересными для нападающих, с другой стороны, если
   появится непредвиденный или неизвестный для действующей версии phpMussel,
   или её будущим версиям, эксплоит, который предложит вектор атак, способных
   принести слепым командам положительный результат, он может воодушевить
   нападающих на новые атаки вашей системы.
 - Если ваш пароль был скомпрометирован, то атакующий может обойти подписи,
   обычно предотвращающие атаки, или полностью деактивировать phpMussel.

 Решение принимать Вам. В стандартном комплекте эти проверки деактивированы. И
 всё же этот раздел объясняет, как вы можете эти проверки активировать и
 использовать.

 Список предлагаемых команд браузера:

 scan_log
   Необходимый пароль: logs_password
   Следующие условия: Необходимо установить scan_log.
   Необходимые параметры: (нет)
   Дополнительные параметры: (нет)
   Пример: ?logspword=[logs_password]&phpmussel=scan_log
   ~
   Цель: Выдача содержания файла scan_log.
   ~
 scan_kills
   Необходимый пароль: logs_password
   Следующие условия: Необходимо установить scan_kills.
   Необходимые параметры: (нет)
   Дополнительные параметры: (нет)
   Пример: ?logspword=[logs_password]&phpmussel=scan_kills
   ~
   Цель: Выдача содержания файла scan_kills.
   ~
 controls_lockout
   Необходимый пароль: logs_password ИЛИ script_password
   Следующие условия: (нет)
   Необходимые параметры: (нет)
   Дополнительные параметры: (нет)
   Пример 1: ?logspword=[logs_password]&phpmussel=controls_lockout
   Пример 2: ?pword=[script_password]&phpmussel=controls_lockout
   ~
   Цель: Деактивировать все стандартные проверки браузера. Эту функцию вы
         можете использовать при опасении, что Ваш пароль был скомпрометирован
         (это случается, если вы пользовались проверками с другого компьютера,
         который не защищён или не заслуживает доверия). controls_lockout
         создает файл "controls.lck" с регистре vault, после чего phpMussel
         сначала ищет, прежде чем действует. Если проверки деактивированы, вам
         придётся самим ликвидировать файл "controls.lck" при помощи FTP или
         другой программы. Может вызываться любым паролем.
   ~
 disable
   Необходимый пароль: script_password
   Следующие условия: (нет)
   Необходимые параметры: (нет)
   Дополнительные параметры: (нет)
   Пример: ?pword=[script_password]&phpmussel=disable
   ~
   Цель: Деактивировать phpMussel. Используется во время обновления программ,
         внесения изменений в Вашу систему, когда вы инсталлируете программное
         обеспечение или модули, что может вызвать сигнал тревоги. Этой
         функцией Вы можете воспользоваться также и в том случае, если
         phpMussel нашла проблемы, которые вы не хотите удалять из Вашей
         системы. Для активизации phpMussel воспользуйтесь "enable".
   ~
 enable
   Необходимый пароль: script_password
   Следующие условия: (нет)
   Необходимые параметры: (нет)
   Дополнительные параметры: (нет)
   Пример: ?pword=[script_password]&phpmussel=enable
   ~
   Цель: Активировать phpMussel. Используется в том случае, если вы посредством
         "disable" деактивировали phpMussel, а теперь хотите его снова
         активировать.
   ~
 update
   Необходимый пароль: script_password
   Следующие условия: должны быть в наличии "update.dat" и "update.inc".
   Необходимые параметры: (нет)
   Дополнительные параметры: (нет)
   Пример: ?pword=[script_password]&phpmussel=update
   ~
   Цель: Отыскать обновление phpMussel и подписями. Если поиск прошёл успешно и
         обновление возможно, то будет произведена его загрузка и инсталляция.
         При безрезультатном поиске процесс прекращается. Все результаты будут
         показаны. Для уверенности рекомендуется один раз в месяц проводить
         обновление подписей и phpMussel. Нет смысла искать обновления чаще,
         так как соответствующие пакеты выпускаются один раз в месяц.
   ~
 greylist
   Необходимый пароль: script_password
   Следующие условия: (нет)
   Необходимые параметры: [Название подписи для серый список]
   Дополнительные параметры: (нет)
   Пример: ?pword=[script_password]&phpmussel=greylist&musselvar=[подписи]
   ~
   Цель: Добавить подписи в серый список.
   ~
 greylist_clear
   Необходимый пароль: script_password
   Следующие условия: (нет)
   Необходимые параметры: (нет)
   Дополнительные параметры: (нет)
   Пример: ?pword=[script_password]&phpmussel=greylist_clear
   ~
   Цель: Удалить весь серый список.
   ~
 greylist_show
   Необходимый пароль: script_password
   Следующие условия: (нет)
   Необходимые параметры: (нет)
   Дополнительные параметры: (нет)
   Пример: ?pword=[script_password]&phpmussel=greylist_show
   ~
   Цель: Показывает содержание серого списка.
   ~

                                     ~ ~ ~


 4B. CLI (СПОСОБ КОМАНДНЫХ СТРОК)

 В Windows системах phpMussel может быть использована как интерактивный сканер
 в CLI-модусе. Для этого прочитайте раздел "ИНСТАЛЛЯЦИЯ (CLI; СПОСОБ КОМАНДНЫХ
 СТРОК)".

 Для получения доступа к имеющимся в распоряжении CLI-командам, внесите в
 командную строку «с» (ANSI/ASCII) и подтвердите свою команду, нажав «Enter».

                                     ~ ~ ~


 5. СОДЕРЖАНИЕ ПАКЕТА ФАЙЛОВ

 Следующая таблица содержит все файлы, содержащиеся в скаченном архиве
 руководства, а также файлы, которые можно создать, используя данное
 руководство, с кратким описанием этих файлов.

 /phpmussel.php (Script, Включены)
    Загружаемый файл. Скачивает руководство, Updater и т.д. Этот файл будет
    связан с Вашей системой управления содержимым (CMS) (обязательно!).
    ~
 /web.config (Другой, Включены)
    Файл ASP.NET-конфигурации. Этот файл необходим для защиты "/vault"
    регистров от неавторизованного доступа, когда руководство инсталлируется на
    один из серверов, базирующихся на ASP.NET-технологиях.
    ~
 /_docs/ (Регистр)
    Регистр с документами (содержит различные файлы).
    ~
 /_docs/change_log.txt (Документация, Включены)
    Перечень внесённых в руководство изменений и его различные версии (на
    эффективность данного руководства не влияет).
    ~
 /_docs/readme.de.md (Документация, Включены); DEUTSCH
 /_docs/readme.de.txt (Документация, Включены); DEUTSCH
 /_docs/readme.en.md (Документация, Включены); ENGLISH
 /_docs/readme.en.txt (Документация, Включены); ENGLISH
 /_docs/readme.es.md (Документация, Включены); ESPAÑOL
 /_docs/readme.es.txt (Документация, Включены); ESPAÑOL
 /_docs/readme.fr.md (Документация, Включены); FRANÇAIS
 /_docs/readme.fr.txt (Документация, Включены); FRANÇAIS
 /_docs/readme.id.md (Документация, Включены); BAHASA INDONESIA
 /_docs/readme.id.txt (Документация, Включены); BAHASA INDONESIA
 /_docs/readme.it.md (Документация, Включены); ITALIANO
 /_docs/readme.it.txt (Документация, Включены); ITALIANO
 /_docs/readme.nl.md (Документация, Включены); NEDERLANDSE
 /_docs/readme.nl.txt (Документация, Включены); NEDERLANDSE
 /_docs/readme.pt.md (Документация, Включены); PORTUGUÊS
 /_docs/readme.pt.txt (Документация, Включены); PORTUGUÊS
 /_docs/readme.ru.md (Документация, Включены); РУССКИЙ
 /_docs/readme.ru.txt (Документация, Включены); РУССКИЙ
    Файлы README (например; файл, который вы сейчас читаете).
    ~
 /_docs/signatures_tally.txt (Документация, Включены)
    Количество учтённых изменений, содержащихся в списе подписей (на
    эффективность данного руководства не влияет).
    ~
 /_testfiles/ (Регистр)
    Регистр с различными файлами тестов. Находящиеся здесь файлы контролируют
    правильность установки phpMussel в Вашей системе. В случае если вы не
    хотите проводить такой тест, этот регистр или файлы можете не загружать.
    ~
 /_testfiles/ascii_standard_testfile.txt (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознавание нормированных ASCII подписями.
    ~
 /_testfiles/coex_testfile.rtf (Тестовый файл, Включены)
    Тестовый файл для контроля комплекса расширенного опознавания подписями.
    ~
 /_testfiles/exe_standard_testfile.exe (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание PE подписями.
    ~
 /_testfiles/general_standard_testfile.txt (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание универальных пописей.
    ~
 /_testfiles/graphics_standard_testfile.gif (Тестовый файл, Включены)
    Тестовый файл, конролирующий опознание графических подписями.
    ~
 /_testfiles/html_standard_testfile.txt (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание нормированных HTML подписями.
    ~
 /_testfiles/md5_testfile.txt (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание MD5 подписями.
    ~
 /_testfiles/metadata_testfile.tar (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание метаданных подписей, а также
    контролирует поддержку TAR-архива Вашей системы.
    ~
 /_testfiles/metadata_testfile.txt.gz (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание метаданных подписей, а также
    контролирует поддержку GZ-архива Вашей системы.
    ~
 /_testfiles/metadata_testfile.zip (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание метаданных подписей, а также
    контролирует поддержку ZIP-архива Вашей системы.
    ~
 /_testfiles/ole_testfile.ole (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание OLE подписями.
    ~
 /_testfiles/pdf_standard_testfile.pdf (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание PDF подписями.
    ~
 /_testfiles/pe_sectional_testfile.exe (Тестовый файл, Включены)
    Тестовый файл, контролирующий опознание секционных PE подписями.
    ~
 /_testfiles/swf_standard_testfile.swf (Тестовый файл, Включены)
    Тестовый файл, контролирующий SWF-подписи.
    ~
 /_testfiles/xdp_standard_testfile.xdp (Тестовый файл, Включены)
    Тестовый файл, контролирующий группу XML/XDP подписями.
    ~
 /vault/ (Регистр)
    Vault-регистр (содержит различные файлы)
    ~
 /vault/cache/ (Регистр)
    Cache-регистр (для промежуточных данных).
    ~
 /vault/cache/.htaccess (Другой, Включены)
    Hypertext access file (в этом случае защищает от неавторизованного доступа
    чувствительные файлы данного руководства).
    ~
 /vault/lang/ (Регистр)
    Содержит phpMussel-файлы на разных языках.
    ~
 /vault/lang/.htaccess (Другой, Включены)
    Hypertext access file (в этом случае защищает от неавторизованного доступа
    чувствительные файлы данного руководства).
    ~
 /vault/lang/lang.de.inc (Script, Включены); DEUTSCH
 /vault/lang/lang.en.inc (Script, Включены); ENGLISH
 /vault/lang/lang.es.inc (Script, Включены); ESPAÑOL
 /vault/lang/lang.fr.inc (Script, Включены); FRANÇAIS
 /vault/lang/lang.id.inc (Script, Включены); BAHASA INDONESIA
 /vault/lang/lang.it.inc (Script, Включены); ITALIANO
 /vault/lang/lang.ja.inc (Script, Включены); 日本語
 /vault/lang/lang.nl.inc (Script, Включены); NEDERLANDSE
 /vault/lang/lang.pt.inc (Script, Включены); PORTUGUÊS
 /vault/lang/lang.ru.inc (Script, Включены); РУССКИЙ
 /vault/lang/lang.vi.inc (Script, Включены); TIẾNG VIỆT
 /vault/lang/lang.zh.inc (Script, Включены); 中文（简体）
 /vault/lang/lang.zh-TW.inc (Script, Включены); 中文（傳統）
    Языковые файлы на phpMussel.
    ~
 /vault/quarantine/ (Регистр)
    Карантинный регистр (содержит файлы, находящиеся на карантине).
    ~
 /vault/quarantine/.htaccess (Другой, Включены)
    Hypertext access file (в этом случае защищает от неавторизованного доступа
    чувствительные файлы данного руководства).
    ~
 /vault/.htaccess (Другой, Включены)
    Hypertext access file (в этом случае защищает от неавторизованного доступа
    чувствительные файлы данного руководства).
    ~
 /vault/ascii_clamav_regex.cvd (Подписей, Включены)
 /vault/ascii_clamav_regex.map (Подписей, Включены)
 /vault/ascii_clamav_standard.cvd (Подписей, Включены)
 /vault/ascii_clamav_standard.map (Подписей, Включены)
 /vault/ascii_custom_regex.cvd (Подписей, Включены)
 /vault/ascii_custom_standard.cvd (Подписей, Включены)
 /vault/ascii_mussel_regex.cvd (Подписей, Включены)
 /vault/ascii_mussel_standard.cvd (Подписей, Включены)
    Файлы с нормированных ASCII подписями. Требуется, если опция нормированных
    ASCII подписями в "phpmussel.ini" активирован. Может удалить, если опция
    деактивирован.
    ~
 /vault/coex_clamav.cvd (Подписей, Включены)
 /vault/coex_custom.cvd (Подписей, Включены)
 /vault/coex_mussel.cvd (Подписей, Включены)
    Файлы с комплекса расширенного опознавания. Требуется, если опция комплекса
    расширенного опознавания в "phpmussel.ini" активирован. Может удалить, если
    опция деактивирован.
    ~
 /vault/elf_clamav_regex.cvd (Подписей, Включены)
 /vault/elf_clamav_regex.map (Подписей, Включены)
 /vault/elf_clamav_standard.cvd (Подписей, Включены)
 /vault/elf_clamav_standard.map (Подписей, Включены)
 /vault/elf_custom_regex.cvd (Подписей, Включены)
 /vault/elf_custom_standard.cvd (Подписей, Включены)
 /vault/elf_mussel_regex.cvd (Подписей, Включены)
 /vault/elf_mussel_standard.cvd (Подписей, Включены)
    Файлы с ELF подписями. Требуется, если опция ELF подписями в
    "phpmussel.ini" активирован. Может удалить, если опция деактивирован.
    ~
 /vault/exe_clamav_regex.cvd (Подписей, Включены)
 /vault/exe_clamav_regex.map (Подписей, Включены)
 /vault/exe_clamav_standard.cvd (Подписей, Включены)
 /vault/exe_clamav_standard.map (Подписей, Включены)
 /vault/exe_custom_regex.cvd (Подписей, Включены)
 /vault/exe_custom_standard.cvd (Подписей, Включены)
 /vault/exe_mussel_regex.cvd (Подписей, Включены)
 /vault/exe_mussel_standard.cvd (Подписей, Включены)
    Файлы с PE подписями. Требуется, если опция PE подписями в "phpmussel.ini"
    активирован. Может удалить, если опция деактивирован.
    ~
 /vault/filenames_clamav.cvd (Подписей, Включены)
 /vault/filenames_custom.cvd (Подписей, Включены)
 /vault/filenames_mussel.cvd (Подписей, Включены)
    Файлы с названиями подписями. Требуется, если опция названиями подписями в
    "phpmussel.ini" активирован. Может удалить, если опция деактивирован.
    ~
 /vault/general_clamav_regex.cvd (Подписей, Включены)
 /vault/general_clamav_regex.map (Подписей, Включены)
 /vault/general_clamav_standard.cvd (Подписей, Включены)
 /vault/general_clamav_standard.map (Подписей, Включены)
 /vault/general_custom_regex.cvd (Подписей, Включены)
 /vault/general_custom_standard.cvd (Подписей, Включены)
 /vault/general_mussel_regex.cvd (Подписей, Включены)
 /vault/general_mussel_standard.cvd (Подписей, Включены)
    Файлы с простых подписями. Требуется, если опция простых подписями в
    "phpmussel.ini" активирован. Может удалить, если опция деактивирован. Может
    удалить, если опция деактивирован.
    ~
 /vault/graphics_clamav_regex.cvd (Подписей, Включены)
 /vault/graphics_clamav_regex.map (Подписей, Включены)
 /vault/graphics_clamav_standard.cvd (Подписей, Включены)
 /vault/graphics_clamav_standard.map (Подписей, Включены)
 /vault/graphics_custom_regex.cvd (Подписей, Включены)
 /vault/graphics_custom_standard.cvd (Подписей, Включены)
 /vault/graphics_mussel_regex.cvd (Подписей, Включены)
 /vault/graphics_mussel_standard.cvd (Подписей, Включены)
    Файлы с графическими подписями. Требуется, если опция графическими
    подписями в "phpmussel.ini" активирован. Может удалить, если опция
    деактивирован. Может удалить, если опция деактивирован.
    ~
 /vault/greylist.csv (Signatures, Included/Создан)
    CSV-подписи, занесённые в серый список, которые phpMussel должна
    игнорировать (после удаления файл автоматически создаётся заново).
    ~
 /vault/hex_general_commands.csv (Подписей, Включены)
    Закодированная в шестнадцатеричной системе счисления CSV с общим команды.
    Требуется, если опция общим команды в "phpmussel.ini" активирован. Может
    удалить, если опция деактивирован.
    ~
 /vault/html_clamav_regex.cvd (Подписей, Включены)
 /vault/html_clamav_regex.map (Подписей, Включены)
 /vault/html_clamav_standard.cvd (Подписей, Включены)
 /vault/html_clamav_standard.map (Подписей, Включены)
 /vault/html_custom_regex.cvd (Подписей, Включены)
 /vault/html_custom_standard.cvd (Подписей, Включены)
 /vault/html_mussel_regex.cvd (Подписей, Включены)
 /vault/html_mussel_standard.cvd (Подписей, Включены)
    Файлы с нормированных HTML подписями. Требуется, если опция нормированных
    HTML подписями в "phpmussel.ini" активирован. Может удалить, если опция
    деактивирован.
    ~
 /vault/lang.inc (Script, Включены)
    phpMussel языковые файлы.
    ~
 /vault/macho_clamav_regex.cvd (Подписей, Включены)
 /vault/macho_clamav_regex.map (Подписей, Включены)
 /vault/macho_clamav_standard.cvd (Подписей, Включены)
 /vault/macho_clamav_standard.map (Подписей, Включены)
 /vault/macho_custom_regex.cvd (Подписей, Включены)
 /vault/macho_custom_standard.cvd (Подписей, Включены)
 /vault/macho_mussel_regex.cvd (Подписей, Включены)
 /vault/macho_mussel_standard.cvd (Подписей, Включены)
    Файлы с Mach-O подписями. Требуется, если опция Mach-O подписями в
    "phpmussel.ini" активирован. Может удалить, если опция деактивирован.
    ~
 /vault/mail_clamav_regex.cvd (Подписей, Включены)
 /vault/mail_clamav_regex.map (Подписей, Включены)
 /vault/mail_clamav_standard.cvd (Подписей, Включены)
 /vault/mail_clamav_standard.map (Подписей, Включены)
 /vault/mail_custom_regex.cvd (Подписей, Включены)
 /vault/mail_custom_standard.cvd (Подписей, Включены)
 /vault/mail_mussel_regex.cvd (Подписей, Включены)
 /vault/mail_mussel_standard.cvd (Подписей, Включены)
 /vault/mail_mussel_standard.map (Подписей, Включены)
    Файл с подписями для phpMussel_mail() подписями. Может удалить, если не
    используются.
    ~
 /vault/md5_clamav.cvd (Подписей, Включены)
 /vault/md5_custom.cvd (Подписей, Включены)
 /vault/md5_mussel.cvd (Подписей, Включены)
    Файлы с MD5 подписями. Требуется, если опция MD5 подписями в
    "phpmussel.ini" активирован. Может удалить, если опция деактивирован.
    ~
 /vault/metadata_clamav.cvd (Подписей, Включены)
 /vault/metadata_custom.cvd (Подписей, Включены)
 /vault/metadata_mussel.cvd (Подписей, Включены)
    Файл с архива метаданных подписями. Требуется, если опция архива метаданных
    подписями в "phpmussel.ini" активирован. Может удалить, если опция
    деактивирован.
    ~
 /vault/ole_clamav_regex.cvd (Подписей, Включены)
 /vault/ole_clamav_regex.map (Подписей, Включены)
 /vault/ole_clamav_standard.cvd (Подписей, Включены)
 /vault/ole_clamav_standard.map (Подписей, Включены)
 /vault/ole_custom_regex.cvd (Подписей, Включены)
 /vault/ole_custom_standard.cvd (Подписей, Включены)
 /vault/ole_mussel_regex.cvd (Подписей, Включены)
 /vault/ole_mussel_standard.cvd (Подписей, Включены)
    Файлы с OLE подписями. Требуется, если опция OLE подписями в
    "phpmussel.ini" активирован. Может удалить, если опция деактивирован.
    ~
 /vault/pdf_clamav_regex.cvd (Подписей, Включены)
 /vault/pdf_clamav_regex.map (Подписей, Включены)
 /vault/pdf_clamav_standard.cvd (Подписей, Включены)
 /vault/pdf_clamav_standard.map (Подписей, Включены)
 /vault/pdf_custom_regex.cvd (Подписей, Включены)
 /vault/pdf_custom_standard.cvd (Подписей, Включены)
 /vault/pdf_mussel_regex.cvd (Подписей, Включены)
 /vault/pdf_mussel_standard.cvd (Подписей, Включены)
    Файлы с PDF подписями. Требуется, если опция PDF подписями в
    "phpmussel.ini" активирован. Может удалить, если опция деактивирован.
    ~
 /vault/pe_clamav.cvd (Подписей, Включены)
 /vault/pe_custom.cvd (Подписей, Включены)
 /vault/pe_mussel.cvd (Подписей, Включены)
    Файлы с PE-секционных подписями. Требуется, если опция PE-секционных
    подписями в "phpmussel.ini" активирован. Может удалить, если опция
    деактивирован.
    ~
 /vault/pex_custom.cvd (Подписей, Включены)
 /vault/pex_mussel.cvd (Подписей, Включены)
    Файлы с PE расширенного опознавания подписями. Требуется, если опция PE
    расширенного опознавания подписями в "phpmussel.ini" активирован. Может
    удалить, если опция деактивирован.
    ~
 /vault/phpmussel.inc (Script, Включены)
    Core Script (совершенно необходим)!
    ~
 /vault/phpmussel.ini (Другой, Включены)
    Файл с конфигурации. Содержит всевозможные конфигурации phpMussel
    (совершенно необходим)!
    ~
 /vault/scan_log.txt *(Журнальный файл, Создан)
    Опись всех просканированных phpMussel объектов.
    ~
 /vault/scan_kills.txt *(Журнальный файл, Создан)
    Опись всех файлов, загрузка которых была заблокирована phpMussel.
    ~
 /vault/swf_clamav_regex.cvd (Подписей, Включены)
 /vault/swf_clamav_regex.map (Подписей, Включены)
 /vault/swf_clamav_standard.cvd (Подписей, Включены)
 /vault/swf_clamav_standard.map (Подписей, Включены)
 /vault/swf_custom_regex.cvd (Подписей, Включены)
 /vault/swf_custom_standard.cvd (Подписей, Включены)
 /vault/swf_mussel_regex.cvd (Подписей, Включены)
 /vault/swf_mussel_standard.cvd (Подписей, Включены)
    Файлы с Shockwave подписями. Требуется, если опция Shockwave подписями в
    "phpmussel.ini" активирован. Может удалить, если опция деактивирован.
    ~
 /vault/switch.dat (Другой, Включены)
    Этот файл определяет некоторые переменные величины.
    ~
 /vault/template.html (Другой, Включены)
 /vault/template_custom.html (Другой, Включены)
    Шаблонный файлы. Шаблон для HTML-формата сообщений, сообщающий о том, что
    загрузка файла была заблокирована phpMussel (сообщение, которое будет
    показано пользователю).
    ~
 /vault/update.dat (Другой, Включены)
    Файл с содержит информацию о версиях данного руководства и подписи. Если вы
    хотите автоматически или посредством браузера актуализировать phpMussel, то
    этот файл вам необходим.
    ~
 /vault/update.inc (Script, Включены)
    Обновление данного руководства; будет использоваться только для
    автоматической актуализации и вручную при посредничестве браузера.
    ~
 /vault/whitelist_clamav.cvd (Подписей, Включены)
 /vault/whitelist_custom.cvd (Подписей, Включены)
 /vault/whitelist_mussel.cvd (Подписей, Включены)
    Специальный файл белого списка. Требуется, если опция белого списка в
    "phpmussel.ini" активирован, и если вы хотите, чтобы определенные файлы
    белый список. Может удалить, если опция деактивирован, или если вы не
    требуют белый список.
    ~
 /vault/xmlxdp_clamav_regex.cvd (Подписей, Включены)
 /vault/xmlxdp_clamav_regex.map (Подписей, Включены)
 /vault/xmlxdp_clamav_standard.cvd (Подписей, Включены)
 /vault/xmlxdp_clamav_standard.map (Подписей, Включены)
 /vault/xmlxdp_custom_regex.cvd (Подписей, Включены)
 /vault/xmlxdp_custom_standard.cvd (Подписей, Включены)
 /vault/xmlxdp_mussel_regex.cvd (Подписей, Включены)
 /vault/xmlxdp_mussel_standard.cvd (Подписей, Включены)
    Файлы с группы XML/XDP подписями. Требуется, если опция группы XML/XDP
    подписями в "phpmussel.ini" активирован. Может удалить, если опция
    деактивирован.
    ~

 * Название файла может варьироваться, в зависимости от конфигурации в
   "phpmussel.ini".

 = КАСАЕТСЯ ФАЙЛОВ ПОДПИСИ =
    CVD – Это аббревиатура ClamAV вирус/определяющих программ ("ClamAV Virus
    Definitions"); ClamAV присваивает имена своим подписям, которые
    используются phpMussel. Файлы, оканчивающиеся на "CVD", содержат подписи.
    ~
    Файлы с окончанием "MAP" – Это список подписей, которые обязательны для
    единичного сканирования phpMussel и которые нет. Нет необходимости
    использовать все подписи для каждого сканирования. Используя этот список,
    phpMussel ускоряет процесс сканирования, иначе он проходил бы дольше и был
    бы более затратным.
    ~
    Файлы, маркированные "_regex", содержат подписи, используемые в регулярных
    распечатках (regex).
    ~
    Файлы, маркированные "_standard", содержат подписи, которые используются не
    для всех типов пробных проверок.
    ~
    Файлы, имеющие отличную от "_regex" или "_standard" маркировку,
    представляют собой подписи, которые могут быть только теми, или другими, но
    не могут быть и теми, и другими (читайте об этом в разделе ФОРМАТ
    ПОДПИСЕЙ).
    ~
    В файлах, маркированных "_clamav", содержатся подписи непосредственно из
    ClamAV-банка данных (GNU/GPL).
    ~
    В файлах, маркированных "_custom", в предварительной настройке не
    содержится никаких подписями. В них Вы можете вносить свои собственные
    подписи.
    ~
    Файлы, маркированные "_mussel", содержат подписи, происхождение которых не
    связано с ClamAV.
    ~

                                     ~ ~ ~


 6. НАСТРОЙКИ

 Ниже представлен список переменных данных в файле конфигурации
 "phpmussel.ini", а также краткое описание их функций.

 "general" (Категория)
 - Генеральная конфигурация от phpMussel.
    "script_password"
    - Функция комфорта. Она позволяет phpMusse вручную через POST, GET и QUERY
      привести в действие некоторые функции (включая быстрые обновления). Чтобы
      удостовериться, что этот запрос исходит именно от Вас и ни от кого
      другого, phpMussel ожидает пароль в течении запроса. script_password вы
      устанавливаете сами. Выберите такой пароль, который Вы можете легко
      запомнить, но чтобы другому было трудно его вычислить. Без пароля ручные
      запросы деактивируют.
      * Не воздействует на CLI-модус.
    "logs_password"
    - Как script_password, однако служит только для выдачи содержания scan_log
      и scan_kills. Если вы кому-то разрешаете пользоваться какой-то одной из
      функций, то лучше иметь разные пароли доступа.
      * Не воздействует на CLI-модус.
    "cleanup"
    - После исполнения стирает переменные величины данного руководства и
      очищает кэш-память. Если вы не хотите пользоваться руководством после
      того, как проверили загрузку программы, то установите опцию `true`, чтобы
      минимизировать загрузку памяти. Если вы будете использовать руководство и
      для других целей, то установите опцию `false`, дабы избежать ненужного
      многократного считывания данных в памяти. Как правило, устанавливается
      опция `true`, но потом вы сможете пользоваться руководством только для
      контроля файлов.
      * Не воздействует на CLI-модус.
    "scan_log"
    - Название файла, в который записываются результаты всех контрольных
      проверок. Задайте имя файлу или оставьте пустым, чтобы деактивировать
      опцию.
    "scan_kills"
    - Название файла, в который записываются все заблокированные загрузки.
      Задайте имя файлу или оставьте пустым, чтобы деактивировать опцию.
    "ipaddr"
    - Место IP-адреса актуального соединения в общем потоке данных (полезно для
      Cloud-сервиса). Стандарт = REMOTE_ADDR. Внимание! Изменяйте это значение
      только в том случае, если вы уверены в своих действиях!
    "forbid_on_block"
    - Возвращённый 403-HTTP-заголовок при заблокированной загрузке данных.
      0 = Нет (200) [Стандарт], 1 = Да (403).
    "delete_on_sight"
    - Эта опция позволяет в течение сканирования немедленно удалять файлы при
      наличии в них опознавательных признаков, содержащихся в подписи или
      других методах. При этом не будут затрагиваться файлы, идентифицированные
      как неинфицированные. Если в архиве будет инфицирован хотя бы один файл,
      то будет удалён весь архив. Во время загрузки файлов эту функцию
      активировать не обязательно, так как PHP после исполнения удаляет
      содержимое кэш-памяти. Это означает, что PHP удалит каждый скаченный
      через сервер файл, если он не перемещён, не скопирован или не удалён. Эта
      опция, как дополнительная мера, была введена для большей безопасности, но
      в основном для систем, в которых PHP ведёт себя по-другому.
      False – После проверки файл останется нетронутым [Стандарт];
      True – После проверки инфицированный файл будет немедленно удалён.
    "lang"
    - Задаёт phpMussel стандарт языка.
    "lang_override"
    - При помощи этой опции phpMussel может задавать язык настройки и язык
      поступающих запросов (HTTP_ACCEPT_LANGUAGE). 0 – нет [Стандарт]; 1 – да.
    "lang_acceptable"
    - `lang_acceptable` указывает phpMussel, какой язык данного руководства
      будет использоваться из "lang" или из "HTTP_ACCEPT_LANGUAGE". Эта команда
      должна быть настроена лишь для случая, если вы захотите добавить
      собственные языки, адаптированные к программе, или захочешь в
      принудительном порядке удалить какие-то языковые файлы. Данная команда
      стоит после запятой в строке кода используемых языков, признанных данным
      руководством.
    "quarantine_key"
    - phpMussel способна держать на карантине попытки загрузить файл, если это
      будет Вам нужно. Эту функцию должны деактивировать те пользователи,
      которые хотят лишь защитить свои интернет-сайты или окружение своего
      хоста, но дальнейший контроль выделенных файлов им не интересен.
      Активировать эту функцию должны те пользователи, которые хотят
      анализировать изолированные файлы на вредоносность или тому подобное.
      Изоляция выделенных файлов иногда может использоваться для поиска ошибки
      при частом появлении сигнала тревоги. Чтобы деактивировать функцию
      карантина, не заполняйте "quarantine_key", и удалите содержание строки,
      если она заполнена. Для активирования функции карантина задайте значение.
      "quarantine_key" – Это важный элемент карантинной функции, способная
      защитить функцию карантина от атак вредоносных программ, и предотвратить
      запуск удерживаемых на карантине файлов. Значение "quarantine_key" вы
      должны хранить втайне от всех, как и пароли. Оптимально в сочетании с
      "delete_on_sight".
    "quarantine_max_filesize"
    - Максимально допустимый объём файлов, которые могут быть изолированы в
      карантине. В карантинном регистре НЕ будет сохраняться файлы, объём
      которых больше указанного значения. Эта команда важна тем, что затрудняет
      потенциальному агрессору наводнить нежелательными данными ваш карантинный
      регистр, а также кэш-память вашего хост-сервера. Значение измеряется
      килобайтами. Стандарт = 2048 = 2048KB = 2MB.
    "quarantine_max_usage"
    - Максимально допустимая загрузка карантина. Когда общий объём файлов на
      карантине достигает этого значения, то начинают удаляться старые файлы
      пока не будет достигнуто необходимое значение. Эта команда важна тем, что
      затрудняет потенциальному агрессору наводнить нежелательными данными ваш
      карантинный регистр, а также кэш-память вашего хост-сервера. Значение
      измеряется килобайтами. Стандарт = 65536 = 65536KB = 64MB.
    "honeypot_mode"
    - При активированном Honeypot-модуса phpMussel изолирует каждый загружаемый
      файл без всякой проверки, не обращая внимание на подписи. Эта функция
      предназначена исключительно для исследования вирусов и вредоносных
      программ. Мы рекомендуем использовать эту функцию phpMussel исключительно
      для "honeypotting", а не для проверки загружаемых файлов или других
      целей. В стандартной комплектации эта функция деактивирована.
      0 = Деактивировано [стандартное значение], 1 = Активировано.
    "scan_cache_expiry"
    - Как долго должна phpMussel хранить результаты сканирования в буфере?
      Значение измеряется секундами. Стандартное значение 21600 секунд (6
      часов). Значение равное 0 деактивирует временную память результатов
      сканирования.
    "disable_cli"
    - Деактивировать ли CLI-модус? Обычно CLI-модус активирован. Однако иногда
      он может отрицательно влиять на определённые тестовые программы (например
      на PHPUnit) и другие приложения, базирующиеся на CLI. Если CLI-модус
      нельзя деактивировать, то эту команду нужно игнорировать.
      0 = CLI-модус активирован [Стандарт], 1 = CLI-Modus деактивирован.
 "signatures" (Категория)
 - Конфигурация подписями.
   %%%_clamav = ClamAV-подписи (генеральные подписи и ежедневные обновления).
   %%%_custom = Ваши собственные подписи (в случае если вы такие создали).
   %%%_mussel = phpMussel-подписи, не входящие в банк данных ClamAV.
   - Скан с MD5-подписями? False = Нет; True = Да [Стандарт].
     "md5_clamav"
     "md5_custom"
     "md5_mussel"
   - Скан с генеральными подписями? False = Нет; True = Да [Стандарт].
     "general_clamav"
     "general_custom"
     "general_mussel"
   - Скан с нормированными ASCII подписями? False = Нет; True = Да [Стандарт].
     "ascii_clamav"
     "ascii_custom"
     "ascii_mussel"
   - Скан с нормированными HTML подписями? False = Нет; True = Да [Стандарт].
     "html_clamav"
     "html_custom"
     "html_mussel"
   - Скан PE-файлов (Portable Executable, EXE, DLL и др.) с PE-секционными
     подписями? False = Нет; True = Да [Стандарт].
     "pe_clamav"
     "pe_custom"
     "pe_mussel"
   - Скан PE-файлов (Portable Executable, EXE, DLL и др.) с PE
     расширенного опознавания подписями? False = Нет; True = Да [Стандарт].
     "pex_custom"
     "pex_mussel"
   - Скан PE-файлов (Portable Executable, EXE, DLL и др.) с PE-подписями?
     False = Нет; True = Да [Стандарт].
     "exe_clamav"
     "exe_custom"
     "exe_mussel"
   - Скан ELF-файлов с ELF-подписями? False = Нет; True = Да [Стандарт].
     "elf_clamav"
     "elf_custom"
     "elf_mussel"
   - Скан Mach-O-файлов (OSX и др.) с Mach-O-подписями?
     False = Нет; True = Да [Стандарт].
     "macho_clamav"
     "macho_custom"
     "macho_mussel"
   - Скан графических файлов с графическими подписями?
     False = Нет; True = Да [Стандарт].
     "graphics_clamav"
     "graphics_custom"
     "graphics_mussel"
   - Скан содержания архива с метаданными подписями?
     False = Нет; True = Да [Стандарт].
     "metadata_clamav"
     "metadata_custom"
     "metadata_mussel"
   - Скан OLE-объектов с OLE-подписями? False = Нет; True = Да [Стандарт].
     "ole_clamav"
     "ole_custom"
     "ole_mussel"
   - Скан названий файлов с их подписями? False = Нет; True = Да [Стандарт].
     "filenames_clamav"
     "filenames_custom"
     "filenames_mussel"
   - Скан с позволенными phpMussel_mail()? False = Нет; True = Да [Стандарт].
     "mail_clamav"
     "mail_custom"
     "mail_mussel"
   - Активировать особый файл «белый список»?
     False = Нет; True = Да [Стандарт].
     "whitelist_clamav"
     "whitelist_custom"
     "whitelist_mussel"
   - Скан группы XML/XDP данных с их подписями?
     False = Нет; True = Да [Стандарт].
     "xmlxdp_clamav"
     "xmlxdp_custom"
     "xmlxdp_mussel"
   - Скан с комплексом-расширенных-подписями?
     False = Нет; True = Да [Стандарт].
     "coex_clamav"
     "coex_custom"
     "coex_mussel"
   - Скан с PDF-подписями? False = Нет; True = Да [Стандарт].
     "pdf_clamav"
     "pdf_custom"
     "pdf_mussel"
   - Скан с Shockwave-подписями? False = Нет; True = Да [Стандарт].
     "swf_clamav"
     "swf_custom"
     "swf_mussel"
   - Опции для соответствия предельного значения величин. Изменяйте эти
     значения только в том случае, если вы уверены в себе. SD = стандартные
     подписи. RX = PCRE (Perl Compatible Regular Expressions или "Regex")
     подписи. FN = подписи названия файлов. Если при активизации phpMussel, PHP
     отключается, то нужно уменьшить "max"-значения. Сообщите автору о
     случившемся, а также расскажите к чему привели ваши попытки исправить
     ситуацию.
     "fn_siglen_min"
     "fn_siglen_max"
     "rx_siglen_min"
     "rx_siglen_max"
     "sd_siglen_min"
     "sd_siglen_max"
   "fail_silently"
   - Реакция phpMussel на отсутсвие подписей или дефект в них. Когда
     fail_silently деактивирована, то в течение сканирования будет сообщаться
     об отсутствии подписи или изъянах в ней. В случае если fail_silently
     активирована, то отсутствующие или дефектные подписи будут игнорироваться,
     не сообщая о проблемах. Эта опция должна оставаться такой, если только вы
     не ожидаете отказа системы или чего-то подобного.
     0 = Деактивировано, 1 = Активировано [Стандарт].
   "fail_extensions_silently"
   - Должна phpMussel сообщать, что отсутствует расширение файла? Если
     fail_extensions_silently деактивирована, то при сканировании придёт
     сообщение об отсутствии расширения файла, если же fail_extensions_silently
     активирована, то файлы с отсутствующим расширением будут игнорироваться, и
     при сканировании придёт сообщение, что с этими файлами всё в порядке.
     Деактивация или активация могут повысить Вашу безопасность, однако
     способствовать увеличению ложных сообщений.
     0 = Деактивировано, 1 = Активировано [Стандарт].
   "detect_adware"
   - Интерпретировать подписей для обнаружить рекламное программное?
     False = Нет; True = Да [Стандарт].
   "detect_joke_hoax"
   - Интерпретировать подписей для обнаружить шутка вредоносные/вирусы
     программы? False = Нет; True = Да [Стандарт].
   "detect_pua_pup"
   - Интерпретировать подписей для обнаружить PUAs/PUPs (потенциально
     нежелательных программы/приложений)? False = Нет; True = Да [Стандарт].
   "detect_packer_packed"
   - Интерпретировать подписей для обнаружить упаковщики и упакованные данные?
     False = Нет; True = Да [Стандарт].
   "detect_shell"
   - Интерпретировать подписей для обнаружить веб-шелл скрипты?
     False = Нет; True = Да [Стандарт].
   "detect_deface"
   - Интерпретировать подписей для обнаружить дифейсмент/обезображивание
     программы? False = Нет; True = Да [Стандарт].
 "files" (Категория)
 - Файл обработки конфигурации.
   "max_uploads"
   - Максимально разрешённое количество проверяемых файлов в течение одной
     загрузки файлов. Если количество скачиваемых файлов превышает это
     значение, то, прежде чем сканирование прекратится, пользователь будет об
     этом проинформирован. Эта опция защищает от теоретической DDoS-атаки на
     вашу систему или CMS, тем что, пока агрессор перегружает phpMussel,
     останавливается PHP-процесс. Рекомендуется установить число 10. В
     зависимости от мощности вашего устройства вы можете повышать или уменьшать
     это значение. Внимание! Это значение не учитывает содержание архивов.
   "filesize_limit"
   - Ограничение объема файла в килобайтах. 65536 = 64MB [Стандарт],
     0 = без ограничений (устанавливается для «серого листа»), принимается
     любое (положительное) цифровое значение. Это полезно, если
     PHP-конфигурация Вашей системы в каждом процессе ограничивает
     использование имеющейся памяти или ограничивает объём загружаемого файла.
   "filesize_response"
   - Обработка файлов, превышающих ограничение объёма файлов (если указано).
     0 = добавить к «белому списку»;
     1 = добавить к «чёрному списку» [Стандарт].
   "filetype_whitelist", "filetype_blacklist", "filetype_greylist"
   - Если ваша система позволяет или полностью запрещает загружать специальные
     файлы, то, отсортировав их на белый, чёрный или серый список, программа
     ускоряет процесс сканирования, пропуская эти типы файлов. Формат CSV
     (comma separated values, отделяемые запятой величины). Если вы хотите
     подвергнуть проверке всё, то оставьте переменные величины пустыми, это
     деактивирует белый, чёрный и серый списки.
     Логичная последовательность обработки:
     - Файл, занесённый с белый список, сканирует не блокируя; файл из белого
       или серого списка не проверяет.
     - Файл из чёрного списка не сканирует, но всё же блокирует; файл из серого
       списка не проверяет.
     - Если файл относится к типу файлов, занесённых в серый список, то
       независимо от того пуст или заполнен серый список, программа будет
       сканировать файл как обычно и, базируясь на сканировании, определит
       должен ли он блокироваться или нет; если серый список заполнен и тип
       файла не значится в сером списке, то программа поступит с ним так, как
       будто он занесён в чёрный список, т.е. не сканирует его, но всё равно
       блокирует.
   "check_archives"
   - Нужно ли проверять содержимое архивов?
     0 = Нет (никакой проверки); 1 = Да (будет проверяться) [Стандарт].
     * В настоящее время поддерживается проверка только BZ, GZ, LZF и ZIP
       архивов (на данный момент проверка RAR, CAB, 7z и др. не
       поддерживается).
     * Функция не надёжна! Мы настоятельно рекомендуем оставить эту функцию
       активированной, хотя не можем гарантировать, что обнаружено будет всё.
     * Архивная проверка в данный момент не рекурсивна для ZIP-архивов.
   "filesize_archives"
   - Должен ли объём файла чёрного/белого списка быть перенесён на содержание
     архива? 0 = Нет (всё поместить в серый лист); 1 = Да [Стандарт].
   "filetype_archives"
   - Должен ли тип файла чёрного/белого списка быть перенесён на содержание
     архива? 0 = Нет (всё поместить в серый лист) [Стандарт]; 1 = Да.
   "max_recursion"
   - Максимальная граница рекурсионной глубины архивов. Стандарт = 10.
   "block_encrypted_archives"
   - Нужно ли узнавать и блокировать зашифрованные архивы? phpMussel не может
     сканировать зашифрованные архивы. Не исключена вероятность того, что
     кодировка архива используется агрессором, чтобы избежать phpMussel,
     антивирусных сканеров и других подобных защитных программ. Умение
     phpMussel блокировать зашифрованные архивы может быть поможет уменьшить
     риски, связанные с этой возможностью. False = Нет; True = Да [Стандарт].
 "attack_specific" (Категория)
 - Атака конкретных директив.
   * Определение хамелеон-атаки: 0 = Деактивировано; 1 = Активировано.
   "chameleon_from_php"
   - Поиск PHP-заголовков в файлах, которые не были опознаны ни как PHP-файлы,
     ни как архивы.
   "chameleon_from_exe"
   - Поиск способных загрузиться заголовков в файлах, которые нельзя ни
     загрузить, ни определить как архив; поиск способных загрузиться файлов,
     чьи заголовки не соответствуют требованиям.
   "chameleon_to_archive"
   - Поиск архивов с некорректными заголовками (поддерживаются: BZ, GZ, RAR,
     ZIP, RAR, GZ).
   "chameleon_to_doc"
   - Поиск офисных документов с некорректными заголовками (поддерживаются: DOC,
     DOT, PPS, PPT, XLA, XLS, WIZ).
   "chameleon_to_img"
   - Поиск графиков с некорректными заголовками (поддерживаются: BMP, DIB, PNG,
     GIF, JPEG, JPG, XCF, PSD, PDD, WEBP).
   "chameleon_to_pdf"
   - Поиск PDF-файлов с некорректными заголовками.
   "archive_file_extensions" и "archive_file_extensions_wc"
   - Опознаёт расширение архива или файла (CSV-формат; включать или удалять
     только при проблемах; удаление без нужны может вызвать для архива сигнал
     тревоги; включение без нужды может внести в белый список то, что раньше
     определялось как возможная атака; изменяйте список очень осторожно;
     помните, что программа не влияет на функцию архива и не может
     анализировать содержание). Этот список содержит форматы архивов, наиболее
     часто используемых большинством систем и CMS, однако он не завершён, но
     сделано это намеренно.
   "general_commands"
   - Должнó ли содержание файлов проверяться на общие команды, как "eval()",
     "exec()" и "include()"?
     0 = Нет (не проверять) [Стандарт]; 1 = Да (проверять).
     Если вы планируете посредством браузера вашей системы или CMS загружать
     такие файлы, как PHP, JavaScript, HTML, Python, Perl и др., то выключите
     эту опцию. Активируйте её только в том случае, если вы не имеете никаких
     дополнительных защитных механизмов вашей системы и не планируете загружать
     такие файлы. Совсем не обязательно активировать эту опцию, когда вместе с
     phpMussel вы пользуетесь дополнительным программным обеспечением,
     например, ZB Block. Нет никакого смысла в том, что phpMussel (в контексте
     этой опции) будет искать то, от чего система была только что защищена.
   "block_control_characters"
   - Должны ли файлы, содержащие командные сигналы (отличные от Newline/конец
     строки), быть блокированными ([\x00-\x08\x0b\x0c\x0e\x1f\x7f])? При
     загрузке только «голого» текста вы можете активировать эту опцию, чтобы
     усилить защиту своей системы. Но когда она активирована, а вы хотите
     загрузить не только текст, то программа подаст вам ложный сигнал тревоги.
     0 = Не блокировать [Стандарт]; 1 = Блокировать.
   "corrupted_exe"
   - Дефектные файлы и разобрать ошибки.
     0 = игнорировать; 1 = блокировать [Стандарт].
     Должны ли потенциально дефектные файлы (PE - Portable Executable) при
     загрузке проверяться и блокироваться? В случае когда определённые аспекты
     PE-файла повреждены или могут быть неправильно обработаны, то часто
     (однако не всегда) они идентифицируются как инфицированные файлы. Многие
     антивирусные программы используют различные методы по опознанию вирусов в
     таких файлах. Программисты вирусов, зная об этом, прилагают много усилий к
     тому, чтобы вирус остался неопознанным.
   "decode_threshold"
   - Опциональное ограничение или порог числа исходных данных, которые должны
     узнаваться командой декодирования (если во время процесса сканирования не
     возникнут ощутимые проблемы производительности). Значение является целым
     числом, объём файлов измеряется в килобайтах.
     Стандартная установка 512 (512 KB). Ноль или нулевое значение деактивирует
     ограничение (все такие ограничения нужно устранять, ориентируясь на
     величину файла).
   "scannable_threshold"
   - Опциональные ограничения или порог числа исходных данных, которые
     phpMussel должна прочитать и просканировать (если во время процесса
     сканирования возникнут ощутимые проблемы производительности). Значение
     является целым числом, объём файлов измеряется в килобайтах. Стандартная
     установка 32768 (32 MB). Ноль или нулевое значение деактивирует
     ограничения. Основное правило: это значение должно быть меньше среднего
     объёма загружаемых файлов, которые вы хотите скачать на свой сервер или
     веб-страницу, не больше нормы filesize_limit, и не превышать пятой части
     общей PHP-памяти php.ini файлов конфигурации. Эти правила не дают
     phpMussel использовать слишком большой объём памяти (что препятствовало
     бы phpMussel успешно сканировать файлы, превышающие определенную
     величину).
 "compatibility" (Категория)
 - Директивы совместимости для phpMussel.
   "ignore_upload_errors"
   - Как правило, эта директива находится в положении AUS, если только нет
     потребности в ней для правильного функционирования phpMussel на вашей
     системе. При находящейся в положении AUS директиве phpMussel, опознав
     нѐкий элемент в $_FILES array(), начинает проверять файлы, представляющие
     этот элемент. В случае если файлы окажутся пустыми, phpMussel подаёт
     сигнал тревоги. Это нормальная реакция phpMussel. Однако некоторые CMS
     нормальными считают пустые элементы в $_FILES, и сигнал тревоги подаётся в
     случае отсутствия пустых элементов. В этой ситуации возникает конфликт
     между нормальным поведением phpMussel и CMS. Если это касается вашей CMS,
     то вам необходимо переключить опцию в позицию AN, тогда phpMussel не будет
     искать пустые элементы, а найдя будет их игнорировать, не сообщая об
     ошибке. Сигнал запроса страницы, таким образом, может продолжаться.
     0 = Деактивировано, 1 = Активировано.
   "only_allow_images"
   - Ожидая загрузку на Вашу систему или CMS только графических изображений,
     или вы желаете, чтобы загружались только графические изображения и
     больше никакие другие файлы, то эта директива должна быть активирована
     (ON), во всех остальных случаях она остаётся деактивированной (OFF).
     Активация этой директивы заставит phpMussel блокировать все попытки
     загрузить файлы, не относящиеся к графикам, не сканируя их. Эта директива
     поможет сократить время обработки и улучшить использование памяти, когда
     будут загружаться файлы, не относящиеся к графическим изображениям.
     0 = Деактивировано, 1 = Активировано.
 "heuristic" (Категория)
 - Эвристические-директивы для phpMussel.
   "threshold"
   - phpMussel имеет определённые подписи, с помощью которых она идентифицирует
     подозрительные и потенциально вредоносные свойства загружаемых файлов, не
     проверяя при этом сами файлы на вредоносность. При помощи этой директивы
     phpMussel определяет степень опасности подозрительных и потенциально
     вредоносных файлов, прежде чем назвать их вредоносными. В этой связи,
     определение степени опасности – это общее количество подозрительных и
     потенциально вредоносных свойств. Стандартное значение равняется 3.
     Значение меньше 3, как правило, ведёт к увеличению  ложных сигналов
     тревоги и опознанию большего числа вредных файлов; значение больше 3
     вызывает меньшее количество ложных сигналов тревоги и метиться как вредные
     будет незначительное количество файлов. Оставив это значение таким, вы
     должны осознавать проблемы, которые будут вызваны этой установкой.
 "virustotal" (Категория)
 - VirusTotal.com директивы.
   "vt_public_api_key"
   - Для большей защиты от вирусов, троянов, вредоносных программ и других
     угроз phpMussel может сканировать файлы с Virus Total API. Стандартная
     установка – опция Virus Total API деактивирована. Для активизации нужно
     воспользоваться API-ключом от Virus Total. Эта опция даёт много
     преимуществ, поэтому рекомендуется её активировать. Важно осознавать: для
     использования Virus Total API, необходимо согласиться со всеми условиями
     пользования и соблюдать все директивы, описанные в документах Virus Total!
     Эту функцию интеграции нельзя применять КРОМЕ:
     A) Вы прочитали инструкцию по использованию Virus Total и API и согласен с
        ней. Инструкцию по использованию Virus Total и API можно найти здесь:
        <https://www.virustotal.com/en/about/terms-of-service/>.
     B) Как минимум, вы прочитали предисловие к Virus Total Public API
        документации и понял о чём речь (всё после "Virus Total Public API
        v2.0" но до "Contents"). Документацию Virus Total Public API можно
        найти здесь:
        <https://www.virustotal.com/en/documentation/public-api/>.
     Примечание: Когда сканирование файлов с Virus Total API деактивировано, то
     нет нужды проверять директивы этой категории ("virustotal"), потому что
     нельзя проверить то, что деактивировано. Для получения Virus Total API
     ключа, нужно пойти на их веб-страницу и вверху справа найти ссылку
     «Вступить в сообщество». Указав все требуемые данные, кликните в
     «Зарегистрироваться». Выполнив все указания, вы получите открытые
     API-ключи, скопируйте их и введите API-ключ в "vt_public_api_key"
     директиву "phpmussel.ini" файла конфигурации.
   "vt_suspicion_level"
   - Допуская файлы к сканированию Virus Total API, phpMussel будет
     ограничиваться только теми файлами, которые рассматриваются «опасными».
     Опционально вы можете регулировать эти ограничения, изменив значение
     "vt_suspicion_level" директивы.
     0 - Файлы будут рассматриваться подозрительными только тогда, когда через
         сканирование собственными подписями phpMussel присвоит им
         эвристическую степень опасности. Можно считать, что Virus Total API
         используется как второе мнение в случае, когда phpMussel подозревает,
         что файл повреждён, и нельзя полностью исключить, что он потенциально
         безвреден. Обычно такой файл не будет блокироваться или метиться как
         вредный.
     1 - Файлы будут восприниматься подозрительными, когда через сканирование
         собственными подписями phpMussel присвоит им эвристическую степень
         опасности; когда они являются файлами, которые можно загружать, такие
         как PE файлы, Mach-O файлы, ELF/Linux файлы и др., или имеют формат
         макрос, DOC/DOCX, файлы архивов как RAR, ZIP и др. Это нормальная и
         рекомендуемая степень подозрительности. В случае когда
         предположительно опасный файл phpMussel не признаёт вредоносным или
         противоречивым и, следовательно, не блокирует его и не маркирует как
         опасный, тогда Virus Total API будет использоваться для второго
         мнения.
     2 - Virus Total API должна просканировать все файлы, так как все они будет
         рассматриваться как подозрительные. Я не советую применять эту степень
         подозрительности, потому что при ней API-лимит достигается намного
         быстрее, чем обычно. Правда, есть определённые обстоятельства, когда
         эта степень подозрительности была бы уместной, например, веб-мастер
         или хост-мастер мало доверяют загружаемому содержанию пользователя.
         При этой степени подозрительности все файлы, которые обычно не
         блокируются и не маркируются как вредоносные, будут сканироваться
         Virus Total API. Помни! phpMussel не будет использовать Virus Total
         API, если достигнут API-лимит, не зависимо от степени
         подозрительности. API-лимит, скорее всего, будет достигнут намного
         быстрее, если использовать эту степень подозрительности.
     Примечание: Независимо от степени подозрительности файлы находящиеся в
     белом или чёрном списке будут проверятся не phpMussel, а с помощью Virus
     Total API. Так как эти файлы, просканированные по-другому, перед этим уже
     были задекларированы как вредные или безвредные, то дополнительное
     сканирование не требуется. Совместное сканирование файлов phpMussel и
     Virus Total API предусмотрено для увеличения доверия независимо от
     ситуации, когда phpMussel не доверяет сам себе в определении вреден ли
     файл или безвреден.
   "vt_weighting"
   - Должна phpMussel использовать результаты сканирования с Virus Total API в
     качестве опознания или как определение степени доверия? Существование этой
     директивы объясняется тем, что сканирование файла со многими ядрами должно
     быть более тщательным (как это делает Virus Total) и, следовательно, будет
     найдено большее количество вредоносных файлов, что может привести к
     большему количеству ложных тревог. Есть ситуации, когда результаты
     сканирования бывают выше степени доверия, и тогда применяется однозначный
     результат. Применение значения 0 означает, что результаты сканирования
     будут применяться как опознание. В этом случае phpMussel будет
     рассматривать файл как вредоносный, если какие-то используемые в
     сканировании ядра файлов Virus Total обозначил опасными. При установке
     другого значения, результаты сканирования с Virus Total API будут
     использоваться как определение степени доверия. Количество используемых
     Virus Total ядер, обозначающих файл как вредоносный, будет служить
     степенью доверия (или определением степени доверия). Используемое значение
     будет определять, какую степень доверия (минимальную или требуемую) примет
     phpMussel во внимание, чтобы признать сканируемый файл вредоносным или
     безвредным. Стандартное значение = 0.
   "vt_quota_rate" и "vt_quota_time"
   - Согласно Virus Total API-документации «Лимит времени, за которое должны
     обрабатываться 4 любых запроса, составляет 1 минуту. Используя
     Honeyclient, Honeypot или какую-либо другую активную систему, которая
     содействует VirusTotal, и не только вызывает сообщения, то вы имеете право
     на более высокий лимит времени». phpMussel будет строго придерживаться
     этого лимита. Для его повышения даны эти две директивы, указывающие
     phpMussel на какой лимит она должна ориентироваться. Рекомендуется без
     необходимости это значение не повышать. С возникновением проблем по
     достижению лимита, уменьшение этого значения должно немного помочь. Твой
     лимит будет установлен как "vt_quota_rate" запросы любого типа в каждом
     "vt_quota_time" минутном промежутке времени.
 "template_data" (Категория)
 - Шаблон данных относится к HTML-вывода, используемый для генерации "Загрузить
   Отказано" сообщения отображается для пользователей когда/на загрузки/уплоад
   файлов блокируются. Если вы используете персонализированные темы для
   phpMussel, HTML-выход получены из "template_custom.html" файл, а в противном
   случае, HTML-выход получены из "template.html" файл. Переменные, записанные
   в этом разделе файл конфигурации обрабатываются на HTML-выход в виде заменой
   любой имена переменных в окружении фигурных скобках найденный в HTML-вывода
   с соответствующей переменных данных. Например, где foo="bar", любое
   вхождение <p>{foo}</p> найденный в HTML-вывода станет <p>bar</p>.
   "css_url"
   - Шаблонный файл для персонализированные темы использует внешние CSS
     свойства и шаблонный файл для стандарт тема использует внутренние CSS
     свойства. Поручить phpMussel использовать персонализированные темы
     шаблонный файл, указать адрес публичного HTTP в CSS файлов вашей темы
     используя "css_url" переменная. Если оставить это переменная пустым,
     phpMussel будет использовать шаблонный файл для стандарт тема.

                                     ~ ~ ~


 7. ФОРМАТ ПОДПИСЕЙ

 = ПОДПИСИ НАЗВАНИЙ ФАЙЛОВ =
   Все подписи названий файлов имеют следующий формат:
    NAME:FNRX
   NAME – Название подписи; FNRX – Regex-образец опознания для сравнения
   (декодированных) названий файлов.

 = MD5 ПОДПИСИ =
   Все MD5-подписи имеют следующий формат:
    HASH:FILESIZE:NAME
   HASH – Это MD5-Hash всего файла; FILESIZE – Это общий объём файла;
   NAME – Название подписи.

 = АРХИВ МЕТАДАННЫХ ПОДПИСЕЙ =
   Все подписи архива метаданных имеют следующий формат:
    NAME:FILESIZE:CRC32
   NAME – Название подписи; FILESIZE – Общий объём (некомпримированный) каждого
   файла в архиве; CRC32 – Это CRC32-проверочная сумма каждого отдельного файла
   в архиве.

 = PE-СЕКЦИОННЫЕ ПОДПИСИ =
   Все PE-секционные подписи имеют следующий формат:
    SIZE:HASH:NAME
   HASH – Это MD5-Hash одной PE-секции файла; FILESIZE – Общий объём PE-секции;
   NAME – Название подписи.

 = PE РАСШИРЕННЫХ ПОДПИСЕЙ =
   Все PE расширенных подписей имеют следующий формат:
    $VAR:HASH:SIZE:NAME
   Where $VAR is the name of the PE variable to match against, HASH is the MD5
   hash of that variable, SIZE is the total size of that variable and NAME is
   the name to cite for that signature.

 = ПОДПИСИ БЕЛОГО СПИСКА =
   Все подписи белого списка имеют следующий формат:
    HASH:FILESIZE:TYPE
   HASH – Это MD5-Hash всего файла; FILESIZE – Объём всего файла; TYPE – Тип
   подписи внесённого в белый список файла, в отношении которого имеется
   иммунитет.

 = КОМПЛЕКС РАСШИРЕННЫХ ПОДПИСЕЙ =
   Подписи, входящие в комплекс расширенных подписей, сильно отличаются от
   других видов возможных подписей phpMussel. По многим критериям они не
   согласуются с тем, что специфицируют подписи. Критерии соответствия
   разделяются между собой ";". Тип и данные каждой критерии соответствия
   отделяются друг от друга ":". Формат этой подписи выглядит примерно так:
    $variable1:SOMEDATA;$variable2:SOMEDATA;SignatureName

 = ВСЕ ПРОЧИЕ ПОДПИСИ =
   Все прочие подписи имеют следующий формат:
    NAME:HEX:FROM:TO
   NAME – Название подписи; HEX – Сегмент файла, закодированный в
   шестнадцатеричный системе счисления (hexadecimal), который будет проверяться
   вместе с данной подписью. FROM и TO – Опциональный параметры, задающие для
   проверки старт и конечный пункт в исходных данных (не поддерживается
   функцией сообщения электронной почты).

 = REGEX =
   Каждая форма регулярных выражений, понятных и правильно загружаемых PHP,
   должна также пониматься и phpMussel, чтобы правильно загружать подписи.
   Будьте крайне осторожны в написании новых подписей, базирующихся на
   регулярных выражениях. Неумелые действия могут привести к неправильным и/или
   неожиданным результатам. Если у Вас нет абсолютной уверенности, то
   посмотрите исходный текст phpMussel, описывающий процесс обработки
   регулярных выражений. Помните, что все поисковые образцы, кроме названия
   файлов, архива метаданных и MD5-проверочных образцов, должны быть
   закодированы в шестнадцатеричный системе счисления (за исключением
   синтаксис, естественно)!

 = ГДЕ БУДУТ ХРАНИТЬСЯ СОБСТВЕННЫЕ ПОДПИСИ? =
   Храните свои собственные подписи только в файлах, предусмотренных для этого.
   Название этих файлов должно включать в себя "_custom". Избегайте
   обрабатывать стандартные подписи напрямую, если вы не уверены в себе.
   Создание файлов собственных подписей поможет Вам отделить Ваши подписи от
   подписей, имеющихся в phpMussel. Регулярно обновляйте подписи, которые вы
   загрузили вместе с phpMussel. Велика вероятность, что через некоторое время
   их уже нельзя будет правильно загрузить, так как Map-файлы, участвующие в
   различных операциях, не будут синхронизировать с ними. В свои собственные
   подписи вы можете вносить всё, что соответствует синтаксис. Помните! Новые
   подписи нужно основательно протестировать, прежде чем делиться ими с другими
   или применять их в интернете.

 = КОДИРОВАНИЕ ПОДПИСЕЙ =
   Ниже приводится кодирование подписей, используемое phpMussel:
   - «Нормированные ASCII-подписи» (ascii_*). Проверяется содержание каждого
      файла, не внесённого в белый список и которые следует проверить.
   - «Комплекса расширенного опознавания подписей» (coex_*). Подбираются
      смешанные типы подписями.
   - «ELF-подписи» (elf_*). Проверяется содержание каждого файла, не внесённого
      в белый список, а также его соответствие ELF-формату.
   - «PE-подписи» (exe_*). Проверяется содержание каждого файла, не внесённого
      в белый список, а также его соответствие PE-формату.
   - «Подписи названий файлов» (filenames_*). Проверяется содержание каждого
      файла, не внесённого в белый список и которые следует проверить.
   - «Генеральные подписи» (general_*). Проверяется содержание каждого файла,
      не внесённого в белый список и которые следует проверить.
   - «Графические подписи» (graphics_*). Проверяется содержание каждого файла,
      не внесённого в белый список и которые следует проверить, а также его
      соответствие известному графическому формату.
   - «Общие команды» (hex_general_commands.csv). Проверяется содержание каждого
      файла, не внесённого в белый список и которые следует проверить.
   - «Нормированные HTML-подписи» (html_*). Проверяется содержание каждого
      HTML-файла, не внесённого в белый список и которые следует проверить.
   - «Mach-O-подписи» (macho_*). Проверяется содержание каждого файла, не
      внесённого в белый список и которые следует проверить, а также его
      соответствие Mach-O-формату.
   - «Email-подписи» (mail_*). Посредством функционирования phpMussel_mail()
      проверяются переменные $body сообщений или похожих записей (на
      форумах и т.д.).
   - «MD5-подписи» (md5_*). Посредством MD5-Hash проверяется содержание и объём
      каждого файла, не внесенного в белый список и которые следует проверить.
   - «Архив метаданных подписей» (metadata_*). Контролируется проверочная
      величина CRC32 и объём первого файла каждого архива, не внесённого в
      белый список и которые следует проверить.
   - «OLE-подписи» (ole_*). Проверяется содержание каждого объекта, не
      внесённого в белый список и которые следует проверить.
   - «PDF-подписи» (pdf_*). Проверяется содержание каждого PDF-файла, не
      внесённого в белый список и которые следует проверить.
   - «PE секционных подписей» (pe_*). Посредством значений и MD5-Hash PE-секций
      проверяется каждый файл, не внесённый в белый список и которые следует
      проверить, а также его соответствие PE-формату.
   - «PE расширенного подписей» (pex_*). Checked against the MD5 hash and the
      size of variables within every non-whitelisted file targeted for scanning
      and matched to the PE format.
   - «SWF-подписи» (swf_*). Проверяется содержание каждого Shockwave-файла, не
      внесённого в белый список.
   - «Подписи белого списка» (whitelist_*). Checked against the MD5 hash of the
      contents and the filesize of every file targeted for scanning. Matched
      files will be immune to being matched by the type of signature mentioned
      in their whitelist entry.
   - «XML/XDP-группы подписей» (xmlxdp_*). Поверяются группы XML/XDP файлов из
      каждого файла, не внесённого в белый список и которые следует проверить.
     (Внимание! Каждую такую подпись нужно просто деактивировать в
      "phpmussel.ini").

                                     ~ ~ ~


 8. ИЗВЕСТНЫЕ ПРОБЛЕМЫ СОВМЕСТИМОСТИ

 PHP и PCRE
 - Чтобы phpMussel могла загрузиться, ей необходимы PHP и PCRE. Без PHP и её
   PCRE-расширений phpMussel или вообще не сможет загрузиться, или загрузится
   ненадлежащим образом. Прежде чем скачивать и инсталлировать phpMussel
   убедитесь, что Ваша система имеет PHP и PCRE.

 СОВМЕСТИМОСТЬ С АНТИВИРУСНЫМ ПРОГРАММНЫМ ОБЕСПЕЧЕНИЕМ

 За редким исключением phpMussel хорошо совмещается с большинством антивирусных
 программ. Но были случаи, когда пользователи испытывали трудности.
 VirusTotal.com собрала информацию, описывающую какими тревожными сигналами
 phpMussel реагируют на разные антивирусные программы. Эта информация не
 гарантирует, что установленное на Вашей системе антивирусное программное
 обеспечение не совмещается с phpMussel. Если phpMussel причислила Ваше
 антивирусное программное обеспечение к проблематичному, то Вам нужно его или
 отключать перед использованием phpMussel, или решить эту проблему как-то
 по-другому.

 Последний раз эта информация обновлялась 2015.09.11 года и считается
 актуальной для всех опубликованных на данный момент phpMussel и обеих её
 дополнительных версий (v0.6-v0.7a).

 Ad-Aware                Известных проблем нет
 Agnitum                 Известных проблем нет
 AhnLab-V3               Известных проблем нет
 AntiVir                 Известных проблем нет
 Antiy-AVL               Известных проблем нет
 Avast                !  Сообщает "JS:ScriptSH-inf [Trj]"
 AVG                     Известных проблем нет
 Baidu-International     Известных проблем нет
 BitDefender             Известных проблем нет
 Bkav                 !  Сообщает "VEXDAD2.Webshell"
 ByteHero                Известных проблем нет
 CAT-QuickHeal           Известных проблем нет
 ClamAV                  Известных проблем нет
 CMC                     Известных проблем нет
 Commtouch               Известных проблем нет
 Comodo                  Известных проблем нет
 DrWeb                   Известных проблем нет
 Emsisoft                Известных проблем нет
 ESET-NOD32              Известных проблем нет
 F-Prot                  Известных проблем нет
 F-Secure                Известных проблем нет
 Fortinet                Известных проблем нет
 GData                   Известных проблем нет
 Ikarus                  Известных проблем нет
 Jiangmin                Известных проблем нет
 K7AntiVirus             Известных проблем нет
 K7GW                    Известных проблем нет
 Kaspersky               Известных проблем нет
 Kingsoft                Известных проблем нет
 Malwarebytes            Известных проблем нет
 McAfee               !  Сообщает "New Script.c"
 McAfee-GW-Edition    !  Сообщает "New Script.c"
 Microsoft               Известных проблем нет
 MicroWorld-eScan        Известных проблем нет
 NANO-Antivirus          Известных проблем нет
 Norman                  Известных проблем нет
 nProtect                Известных проблем нет
 Panda                   Известных проблем нет
 Qihoo-360               Известных проблем нет
 Rising                  Известных проблем нет
 Sophos                  Известных проблем нет
 SUPERAntiSpyware        Известных проблем нет
 Symantec                Известных проблем нет
 TheHacker               Известных проблем нет
 TotalDefense            Известных проблем нет
 TrendMicro              Известных проблем нет
 TrendMicro-HouseCall    Известных проблем нет
 VBA32                   Известных проблем нет
 VIPRE                   Известных проблем нет
 ViRobot                 Известных проблем нет

                                     ~ ~ ~


Последнее обновление: 11. Сентябрь 2015 (2015.09.11).
EOF